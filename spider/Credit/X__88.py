# -*- coding: utf-8 -*-
import re

from manager.engine import Engine
import datetime
from spider_code.api import hj_tools as eamonn
from spider_code.confs import getConfig
from spider_code.items import AutoItem

gConfig = getConfig.get_config()


class Spider(Engine):
    name = 'X--88'

    def __init__(self, *args, **kwargs):
        super(Spider, self).__init__(*args, **kwargs)
        self.start_urls = ['http://cxtx.stjs.org.cn/Estimate/OA/MainQueryMark.aspx?clearPaging=true']
        self.url = 'http://cxtx.stjs.org.cn/Estimate/OA/MainQueryMark.aspx?clearPaging=true'
        self.headers = {'Accept': '*/*',
                        'Accept-Encoding': 'gzip, deflate',
                        'Accept-Language': 'zh-CN,zh;q=0.9',
                        'Cache-Control': 'no-cache',
                        'Connection': 'keep-alive',
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                        'Host': 'cxtx.stjs.org.cn',
                        'Origin': 'http://cxtx.stjs.org.cn',
                        'Referer': 'http://cxtx.stjs.org.cn/Estimate/OA/MainQueryMark.aspx?clearPaging=true',
                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36',
                        'X-MicrosoftAjax': 'Delta=true',
                        'X-Requested-With': 'XMLHttpRequest',}
        self.data = {
            'ctl00$ScriptManager2': 'ctl00$cph_content$UpdatePanel1|ctl00$cph_content$GridViewPaging1$btnForwardToPage',
            '__EVENTTARGET': '',
            '__EVENTARGUMENT': '',
            '__LASTFOCUS': '',
            '__VIEWSTATE': '',
            '__VIEWSTATEENCRYPTED': '',
            '__EVENTVALIDATION': 'Yi/N2rVbEoSsBnwPrpv8CI8H5qbxAGKiWdv0h1k4YwcikD54B8lhcAm0WZZwytlEQdETpP7GoHiDcAGNTsBAHdQs+8Z/mWyVXWMeqONwDqpuCbS3v25p9QDdW+Bi5LjX97EN2Lb07S89xI9J8aU+SQ==',
            'ctl00$WidthPixel': '',
            'ctl00$HeightPixel': '',
            'ctl00$cph_content$drpTitle': 'ECB034F6E40C4E33A5F8C7587D112CB6',
            'ctl00$cph_content$txtEnterName': '',
            'ctl00$cph_content$txtDay': datetime.datetime.now().strftime("%F"),
            'ctl00$cph_content$GridViewPaging1$txtGridViewPagingForwardTo': '2',
            '__ASYNCPOST': 'true',
            'ctl00$cph_content$GridViewPaging1$btnForwardToPage': 'Go',
        }
        self.total = 0
        self.total_count = 0
        self.page = 1

    def parse(self, response):
        if not self.total:
            self.total = eamonn.page(int(re.search(r"共<.*?>(\d+)<.*?>条数据", response.text).group(1)), 20)
        if not self.total_count:
            self.total_count = re.search(r"共<.*?>(\d+)<.*?>条数据", response.text).group(1)
        content_li = response.xpath("//table[@class='gridviewStyle']/tr")[1:]
        for i in content_li:
            item = AutoItem()
            item['企业名称'] = i.xpath("./td[2]/text()").extract_first("").strip()
            item['等级排名'] = i.xpath("./td[1]/text()").extract_first("").strip()
            item['市场行为'] = i.xpath("./td[3]/text()").extract_first("").strip()
            item['质量安全'] = i.xpath("./td[4]/text()").extract_first("").strip()
            item['其他'] = i.xpath("./td[5]/text()").extract_first("").strip()
            item['信用得分'] = i.xpath("./td[6]/span/text()").extract_first("").strip()
            item['发布日期'] = i.xpath("./td[7]/text()").extract_first("").strip()
            item['评价类别'] = i.xpath("./td[8]/text()").extract_first("").strip()
            item['评价机构'] = "汕头市施工企业诚信综合评价体系"
            item['网站维护代码'] = "x--88"
            item['省'] = "广东"
            item['市'] = "汕头"
            item['网站名称'] = "汕头市建设局（汕头市施工企业诚信综合评价体系）"
            item['url'] = self.url
            self.pipeline(item)

        while self.page < self.total:
            self.page += 1
            self.data['ctl00$cph_content$GridViewPaging1$txtGridViewPagingForwardTo'] = str(self.page)
            self.data['__VIEWSTATE'] = response.xpath("//input[@name='__VIEWSTATE']/@value").extract_first("").strip()
            self.data['__EVENTVALIDATION'] = response.xpath("//input[@name='__EVENTVALIDATION']/@value").extract_first("").strip()
            self.produce(
                url=self.url,
                method='post',
                data=self.data,
                headers=self.headers,
                callback=self.parse_detail
            )

    def parse_detail(self, response):
        content_li = response.xpath("//table[@class='gridviewStyle']/tr")[1:]
        for i in content_li:
            item = AutoItem()
            item['企业名称'] = i.xpath("./td[2]/text()").extract_first("").strip()
            item['等级排名'] = i.xpath("./td[1]/text()").extract_first("").strip()
            item['市场行为'] = i.xpath("./td[3]/text()").extract_first("").strip()
            item['质量安全'] = i.xpath("./td[4]/text()").extract_first("").strip()
            item['其他'] = i.xpath("./td[5]/text()").extract_first("").strip()
            item['信用得分'] = i.xpath("./td[6]/span/text()").extract_first("").strip()
            item['发布日期'] = i.xpath("./td[7]/text()").extract_first("").strip()
            item['评价类别'] = i.xpath("./td[8]/text()").extract_first("").strip()
            item['评价机构'] = "汕头市施工企业诚信综合评价体系"
            item['网站维护代码'] = "x--88"
            item['省'] = "广东"
            item['市'] = "汕头"
            item['网站名称'] = "汕头市建设局（汕头市施工企业诚信综合评价体系）"
            item['url'] = self.url
            self.pipeline(item)


if __name__ == '__main__':
    from manager.run import run

    run(['Credit', 'X--88', 'auto', 1])
