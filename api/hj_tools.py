import math
import json
import os

from fuclib import ezfuc
import pandas as pd
import pytesseract
from PIL import Image
from io import BytesIO
import requests
import numpy as np
import cv2 as cv
import base64


def slide_pic(cookie):
    headers = {'Accept': 'application/json, text/javascript, */*; q=0.01',
               'Accept-Encoding': 'gzip, deflate',
               'Accept-Language': 'zh-CN,zh;q=0.9',
               'Connection': 'keep-alive',
               'Host': 'gcxm.hunanjs.gov.cn',
               'Referer': 'http://gcxm.hunanjs.gov.cn/chengxinservice.html',
               'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 '
                             '(KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36',
               'X-Requested-With': 'XMLHttpRequest'}

    cookies = {'ASP.NET_SessionId': cookie}
    url = "http://gcxm.hunanjs.gov.cn/AjaxHandler/PersonHandler.ashx?method=GetVerifyImg"
    res = requests.get(url, headers=headers, cookies=cookies).json()
    backimgdata = base64.b64decode(res[1])
    background = cv.imdecode(np.array(bytearray(backimgdata), dtype=np.uint8), cv.IMREAD_COLOR)
    background = cv.cvtColor(background, cv.COLOR_BGR2GRAY)
    slider = np.array([[166, 167, 168, 168, 169, 169, 168, 168, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 170, 170, 170, 170, 170, 170, 170, 170, 169], [250, 249, 250, 250, 251, 250, 250, 250, 251, 251, 251, 251, 251, 251, 251, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 252, 251, 171], [248, 249, 249, 250, 250, 250, 249, 249, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 250, 251, 250, 251, 251, 250, 250, 249, 172], [253, 253, 253, 253, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 254, 254, 255, 254, 253, 251, 170], [250, 251, 251, 251, 253, 253, 252, 252, 253, 253, 253, 253, 252, 252, 252, 253, 252, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 252, 252, 251, 167], [253, 254, 254, 255, 254, 255, 254, 254, 254, 254, 254, 254, 254, 254, 253, 254, 254, 254, 255, 254, 255, 254, 255, 254, 255, 254, 255, 254, 255, 254, 255, 254, 254, 254, 255, 255, 255, 255, 254, 252, 167], [253, 254, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 255, 255, 255, 255, 254, 253, 170], [253, 253, 254, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 254, 255, 255, 253, 173], [252, 253, 253, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 254, 255, 255, 253, 176], [252, 252, 253, 253, 254, 254, 254, 253, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 254, 255, 255, 253, 182], [251, 252, 252, 253, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 254, 255, 255, 253, 190], [252, 252, 253, 253, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 254, 255, 254, 252, 194], [252, 252, 253, 254, 254, 254, 254, 253, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 255, 255, 255, 255, 254, 252, 193], [252, 253, 253, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 255, 255, 254, 254, 252, 192], [252, 253, 254, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 255, 254, 255, 254, 254, 252, 192], [252, 253, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 255, 255, 255, 255, 253, 252, 193], [253, 254, 254, 255, 255, 254, 254, 253, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 255, 254, 254, 253, 193], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 253, 195], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 253, 203], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 255, 254, 254, 253, 208], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 255, 254, 254, 253, 206], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 255, 255, 255, 254, 254, 208], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 254, 254, 211], [253, 254, 254, 255, 255, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 254, 208], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 207], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 209], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 217], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 222], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 217], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 218], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 221], [251, 252, 253, 254, 254, 254, 254, 253, 255, 255, 255, 255, 255, 255, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219], [248, 251, 254, 254, 254, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255, 254, 254, 254, 254, 254, 254, 254, 255, 218], [249, 252, 254, 254, 254, 253, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255, 254, 254, 254, 254, 254, 254, 254, 255, 220], [250, 252, 253, 253, 252, 252, 253, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 254, 254, 255, 218], [251, 252, 253, 252, 251, 251, 253, 255, 253, 253, 253, 253, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 253, 254, 253, 233], [250, 252, 252, 251, 250, 251, 253, 255, 253, 253, 253, 253, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 253, 253, 252, 218], [249, 251, 252, 252, 251, 251, 252, 253, 255, 255, 255, 255, 255, 255, 255, 255, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 252, 252, 252, 233], [247, 250, 253, 253, 252, 251, 251, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 252, 251, 250, 218], [246, 249, 253, 253, 253, 251, 251, 251, 248, 248, 248, 248, 248, 248, 248, 248, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 252, 252, 252, 251, 250, 201], [246, 247, 249, 250, 250, 249, 247, 246, 247, 247, 247, 248, 248, 249, 249, 249, 241, 244, 248, 250, 249, 248, 247, 248, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 249, 249, 248, 247, 246, 213]], dtype=np.uint8)
    result = cv.matchTemplate(background, slider, cv.TM_CCOEFF_NORMED)
    x, y = np.unravel_index(result.argmax(), result.shape)
    return res[2], y


def page(total, num):
    total_page = math.ceil(int(total) / num)
    return total_page


def ex(res, ex=''):
    if ex == "json":
        return res, json.loads(res)
    else:
        return ezfuc.parse_html(res, ex=ex)


def get1(arr, default=''):
    return ezfuc.get_first(arr, default)


def rpc(text, which):
    return ezfuc.replace_plus(text, which)


def get_xlsx(file_path):
    df = pd.read_excel(file_path)
    df.reset_index(drop=True)
    df = df.dropna(axis='columns', how='all').astype(str)
    df.fillna("", inplace=True)
    return df


def ocr_des(img_bytes, arg=110):
    f = BytesIO(img_bytes)
    img = Image.open(f)
    img = img.convert("L")
    img = img.point(lambda x: 255 if x >= arg else 0)
    img.show()
    # fp = open(r"a.png", 'wb')
    # img.save(fp)
    # return pytesseract.image_to_string(img)
    return pytesseract.image_to_string(img, lang='chi_sim')


def change_pic(img_bytes, name, arg=130):
    f = BytesIO(img_bytes)
    img = Image.open(f)
    img = img.convert("L")
    img = img.point(lambda x: 255 if x >= arg else 0)
    # img.show()
    fp = open(r"D:\new_capt\%s" % name, 'wb')
    img.save(fp)
    print(name)


if __name__ == '__main__':
    with open(r'C:\Users\Dell\Desktop\a.png', 'rb') as f:
        res = f.read()
    print(ocr_des(res))
    # p = r"D:\capt"
    # li = os.listdir(p)
    # total = len(li)
    # count = 0
    # for i in li:
    #     name = i.split('_')[0].lower()
    #     with open(r"%s\%s" % (p, i), "rb") as f:
    #         ret = f.read()
    #     # text = ocr_des(ret)
    #     change_pic(ret, i)
        # if text and text.lower()==name:
        #     count += 1
    # print('准确率：', count/total)